


ARM Macro Assembler    Page 1 


    1 00000000         ; average.s
    2 00000000         ; Created By: Vickie Fridge and Thomas McRoberts
    3 00000000         ; Date Modified: April 3, 2017
    4 00000000                 EXPORT           Average
    5 00000000         
    6 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    7 00000000                 PRESERVE8
    8 00000000                 THUMB
    9 00000000         
   10 00000000         ; EDIT THIS FILE!
   11 00000000         ;-------------------------------------------------------
                       
   12 00000000         ; INSTRUCTIONS:
   13 00000000         ;  Debug the following subroutines (Sum & Average)
   14 00000000         ;   until you get the correct Average values in the
   15 00000000         ; grader in UART1
   16 00000000         ;-------------------------------------------------------
                         
   17 00000000         ; NOTE: The array you are given as input is formatted as
                       :
   18 00000000         ; array[0] = count of numbers
   19 00000000         ; array[1] = first number
   20 00000000         ; array[2] = second number
   21 00000000         ; etc.
   22 00000000         ; EX: int array[5] = {4, 100, 77, 85, 104}
   23 00000000         ;-------------------------------------------------------
                       
   24 00000000         
   25 00000000         
   26 00000000         ;------------Sum----------------
   27 00000000         ; Function finds the sum of an array of 4 byte numbers
   28 00000000         ;     '-> must be given at least one number
   29 00000000         ; Input: R0 holds a pointer to an array
   30 00000000         ;   array[0] is the count of input numbers
   31 00000000         ;    all input numbers follow in array[1], array[2], etc
                       .
   32 00000000         ; Output: R0 is the sum of the numbers 
   33 00000000         
   34 00000000         Sum
   35 00000000 E92D 03FC       PUSH             {R2-R9}
   36 00000004 F04F 0104       MOV              R1, #4      ; R1 IS DELTA 
   37 00000008 F04F 0300       MOV              R3, #0      ; R3 IS THE SUM    
                                                             
   38 0000000C 6802            LDR              R2, [R0]    ;      
   39 0000000E 4614            MOV              R4,R2       ; R4 IS THE SIZE   
                                                             
   40 00000010         
   41 00000010 5842    num     LDR              R2, [R0, R1]
   42 00000012 4413            ADD              R3, R2
   43 00000014 F101 0104       ADD              R1, #4
   44 00000018 EA4F 0691       LSR              R6,R1,#2    ;
   45 0000001C 42A6            CMP              R6, R4
   46 0000001E DC00            BGT              ans
   47 00000020 E7F6            B                num
   48 00000022         
   49 00000022 4618    ans     MOV              R0, R3
   50 00000024 4621            MOV              R1,R4       ;
   51 00000026 E8BD 03FC       POP              {R2-R9}



ARM Macro Assembler    Page 2 


   52 0000002A 4770            BX               LR
   53 0000002C         
   54 0000002C         ;------------Average------------
   55 0000002C         ; Function finds the average of an array of numbers
   56 0000002C         ;    '-> must be given at least one number
   57 0000002C         ; Input: R0 holds a pointer to an array
   58 0000002C         ;   array[0] is the count of input numbers
   59 0000002C         ;    all input numbers follow in array[1], array[2], etc
                       .
   60 0000002C         ; Output: R0 is the average of the numbers (rounded down
                       )
   61 0000002C         
   62 0000002C         Average
   63 0000002C         
   64 0000002C B51E            PUSH             {R1-R4,LR}
   65 0000002E F7FF FFE7       BL               Sum
   66 00000032 FB90 F0F1       SDIV             R0,R0, R1   ; 
   67 00000036 E8BD 401E       POP              {R1-R4,LR}
   68 0000003A 4770            BX               LR
   69 0000003C         
   70 0000003C         
   71 0000003C         ;-------------------------------------------------------
                        
   72 0000003C                 ALIGN
   73 0000003C                 END
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\averag
e.d -o.\average.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\
ARM\Inc\TI\TM4C123 --predefine="__EVAL SETA 1" --list=.\average.lst average.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file average.s
   Uses
      None
Comment: .text unused
Average 0000002C

Symbol: Average
   Definitions
      At line 62 in file average.s
   Uses
      At line 4 in file average.s
Comment: Average used once
Sum 00000000

Symbol: Sum
   Definitions
      At line 34 in file average.s
   Uses
      At line 65 in file average.s
Comment: Sum used once
ans 00000022

Symbol: ans
   Definitions
      At line 49 in file average.s
   Uses
      At line 46 in file average.s
Comment: ans used once
num 00000010

Symbol: num
   Definitions
      At line 41 in file average.s
   Uses
      At line 47 in file average.s
Comment: num used once
5 symbols
336 symbols in table
