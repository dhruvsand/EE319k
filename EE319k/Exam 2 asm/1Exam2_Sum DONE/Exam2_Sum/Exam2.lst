


ARM Macro Assembler    Page 1 


    1 00000000         ;This is Exam 2
    2 00000000         ;Dhruv Sandesara
    3 00000000         ; 35 mins
    4 00000000         ;Your name goes here
    5 00000000         ;You edit this file only
    6 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
    7 00000000                 THUMB
    8 00000000         ;***************** Size****************************
    9 00000000         ; Determines the length of an array of data.  
   10 00000000         ; Input parameter: R0 points to the array of 8-bit signe
                       d numbers
   11 00000000         ;                  array has null(0) termination 
   12 00000000         ; Each entry occupies one 8-bit byte, 
   13 00000000         ;   such that entries are located at sequential memory a
                       ddresses
   14 00000000         ; The zero itself is NOT one of the data points
   15 00000000         ; Output parameter: R0 equals the length
   16 00000000         ; Error conditions: none 
   17 00000000                 EXPORT           Size
   18 00000000         Size
   19 00000000         ; put your code here
   20 00000000 B41E            PUSH{R1-R4}                  ;
   21 00000002 F04F 0200       MOV              R2,#0       ;
   22 00000006         LOOP11
   23 00000006 7801            LDRB             R1,[R0]     ;
   24 00000008 2900            CMP              R1,#0       ;
   25 0000000A D004            BEQ              DONE11
   26 0000000C F100 0001       ADD              R0,#1       ;
   27 00000010 F102 0201       ADD              R2,#1       ;
   28 00000014 E7F7            B                LOOP11      ;
   29 00000016         
   30 00000016         DONE11
   31 00000016 4610            MOV              R0,R2       ;
   32 00000018 BC1E            POP{R1-R4}                   ;
   33 0000001A 4770            BX               LR
   34 0000001C         
   35 0000001C         ;*********Sum********************************
   36 0000001C         ;Find the sum of an array 
   37 0000001C         ;if any input number is negative, then return 0x7FFFFFFF
                       
   38 0000001C         ;Input parameter:  R0 points to the array of 8-bit signe
                       d numbers
   39 0000001C         ;                  array has null(0) termination 
   40 0000001C         ;Output parameter: The 32-bit sum is returned in R0. 
   41 0000001C         ;Error conditions: Return R0 equal to 0x7FFFFFFF on any 
                       negative input
   42 0000001C         
   43 0000001C         DATA
   44 0000001C 7FFFFFFF        DCD              0x7FFFFFFF  ;
   45 00000020                 EXPORT           Sum
   46 00000020         Sum
   47 00000020         ; put your code here
   48 00000020 B41E            PUSH{R1-R4}                  ;
   49 00000022 F04F 0200       MOV              R2,#0       ;
   50 00000026         LOOP
   51 00000026 F990 1000       LDRSB            R1,[R0]     ;
   52 0000002A 2900            CMP              R1,#0       ;
   53 0000002C D007            BEQ              DONE        ;



ARM Macro Assembler    Page 2 


   54 0000002E DB03            BLT              DONE2       ;
   55 00000030 440A            ADD              R2,R2,R1    ;
   56 00000032 F100 0001       ADD              R0,#1       ;
   57 00000036 E7F6            B                LOOP        ;
   58 00000038         
   59 00000038         DONE2
   60 00000038 4802            LDR              R0,=DATA    ;
   61 0000003A 6800            LDR              R0,[R0]
   62 0000003C E000            B                DONE3       ;
   63 0000003E         DONE
   64 0000003E 4610            MOV              R0,R2       ;
   65 00000040         DONE3
   66 00000040 BC1E            POP{R1-R4}                   ; 
   67 00000042 4770            BX               LR
   68 00000044         
   69 00000044                 ALIGN
   70 00000044                 END
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=.\exam2.
d -o.\exam2.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Luminary --predefine="__EVAL SETA 1" --list=.\exam2.lst Exam2.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 6 in file Exam2.s
   Uses
      None
Comment: .text unused
DATA 0000001C

Symbol: DATA
   Definitions
      At line 43 in file Exam2.s
   Uses
      At line 60 in file Exam2.s
Comment: DATA used once
DONE 0000003E

Symbol: DONE
   Definitions
      At line 63 in file Exam2.s
   Uses
      At line 53 in file Exam2.s
Comment: DONE used once
DONE11 00000016

Symbol: DONE11
   Definitions
      At line 30 in file Exam2.s
   Uses
      At line 25 in file Exam2.s
Comment: DONE11 used once
DONE2 00000038

Symbol: DONE2
   Definitions
      At line 59 in file Exam2.s
   Uses
      At line 54 in file Exam2.s
Comment: DONE2 used once
DONE3 00000040

Symbol: DONE3
   Definitions
      At line 65 in file Exam2.s
   Uses
      At line 62 in file Exam2.s
Comment: DONE3 used once
LOOP 00000026

Symbol: LOOP
   Definitions
      At line 50 in file Exam2.s
   Uses
      At line 57 in file Exam2.s
Comment: LOOP used once
LOOP11 00000006

Symbol: LOOP11



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 22 in file Exam2.s
   Uses
      At line 28 in file Exam2.s
Comment: LOOP11 used once
Size 00000000

Symbol: Size
   Definitions
      At line 18 in file Exam2.s
   Uses
      At line 17 in file Exam2.s
Comment: Size used once
Sum 00000020

Symbol: Sum
   Definitions
      At line 46 in file Exam2.s
   Uses
      At line 45 in file Exam2.s
Comment: Sum used once
10 symbols
343 symbols in table
