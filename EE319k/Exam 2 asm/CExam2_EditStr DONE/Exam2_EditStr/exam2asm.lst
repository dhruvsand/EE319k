


ARM Macro Assembler    Page 1 


    1 00000000         ; Exam2asm.s
    2 00000000         ; YOUR NAME:
    3 00000000         ; DHRUV SANDESARA
    4 00000000         ;
    5 00000000         ;   '-> DO NOT FORGET TO PUT YOUR NAME IN THE 
    6 00000000         ;       CODE ON THE EXAM OR IT WILL BE -5 POINTS!!!!
    7 00000000         ; Date Modified:
    8 00000000                 EXPORT           strLen
    9 00000000                 EXPORT           Check
   10 00000000         
   11 00000000                 AREA             |.text|, CODE, READONLY, ALIGN=
2
   12 00000000                 PRESERVE8
   13 00000000                 THUMB
   14 00000000         
   15 00000000         ; EDIT THIS FILE!
   16 00000000         ;-------------------------- INSTRUCTIONS ---------------
                       ---------
   17 00000000         ; Implement the following functions strLen and Check
   18 00000000         ; The grader will display in UART1 when you run your cod
                       e in the debugger
   19 00000000         
   20 00000000         ;--------------- strLen ---------------
   21 00000000         ; Finds the length of a char string
   22 00000000         ; INPUT: R0 is pointer to a null-terminated char string
   23 00000000         ; OUTPUT: the number of chars in string
   24 00000000         ; TESTCASES: (there are 6 testcases for strLen)
   25 00000000         ;   ""     Should Return: 0 
   26 00000000         ; "hi!"    Should Return: 3 
   27 00000000         ; "@!#$%^&*()"  Should Return: 10 
   28 00000000         ; "trick 0 you"  Should Return: 11 
   29 00000000         ; "funny/b/b  /n" Should Return: 13
   30 00000000         ;   "This is a long string of words to test your strLen 
                       function :)" Should Return: 62
   31 00000000         
   32 00000000         strLen
   33 00000000 B41E            PUSH             {R1-R4}
   34 00000002 F04F 0100       MOV              R1,#0       ;
   35 00000006 F04F 0200       MOV              R2,#0       ;
   36 0000000A         STRLOOP
   37 0000000A 7801            LDRB             R1,[R0]
   38 0000000C 2900            CMP              R1,#0       ;
   39 0000000E D004            BEQ              STRDONE     ;
   40 00000010 F102 0201       ADD              R2,#1       ;
   41 00000014 F100 0001       ADD              R0,#1       ;
   42 00000018 E7F7            B                STRLOOP
   43 0000001A         
   44 0000001A         STRDONE
   45 0000001A 4610            MOV              R0,R2       ;
   46 0000001C         
   47 0000001C BC1E            POP              {R1-R4}
   48 0000001E 4770            BX               LR
   49 00000020         ; your code here
   50 00000020         
   51 00000020         ;--------------- Check ---------------
   52 00000020         ; Function checks if two char strings are equal
   53 00000020         ; INPUT: R0 holds a pointer to the first null-terminated
                        char string
   54 00000020         ;   R1 holds a pointer to the second null-terminated cha



ARM Macro Assembler    Page 2 


                       r string
   55 00000020         ; OUTPUT: 1 if strings are equal
   56 00000020         ;    0 if strings are not equal
   57 00000020         ; TESTCASES: (there are 7 testcases for Check)
   58 00000020         ;  (1) Should Output: 1 "" 
   59 00000020         ;          ""
   60 00000020         ;  (2) Should Output: 1 "The University of Texas at Aust
                       in" 
   61 00000020         ;       "The University of Texas at Austin"
   62 00000020         ;  (3) Should Output: 1 "123456789" 
   63 00000020         ;       "123456789" 
   64 00000020         ;  (4) Should Output: 0 "this is same" 
   65 00000020         ;       "this is not same" 
   66 00000020         ;  (5) Should Output: 0 "what if there is no space"
   67 00000020         ;       "whatifthereisnospace"
   68 00000020         ;  (6) Should Output: 0 "how about a space at the end" 
   69 00000020         ;       "how about a space at the end " 
   70 00000020         ;  (7) Should Output: 1 "!@#$%^ ^ &*()__--" 
   71 00000020         ;       "!@#$%^ ^ &*()__--"  
   72 00000020         
   73 00000020         Check
   74 00000020         ;your code here
   75 00000020 E92D 41FC       PUSH             {R2-R8,LR}
   76 00000024         CHECKLOOP
   77 00000024 7802            LDRB             R2,[R0]
   78 00000026 780B            LDRB             R3,[R1]
   79 00000028 429A            CMP              R2,R3       ;
   80 0000002A D109            BNE              NOTEQUAL
   81 0000002C 2A00            CMP              R2,#0       ;
   82 0000002E D004            BEQ              EQUAL       ;
   83 00000030 F100 0001       ADD              R0,#1       ;
   84 00000034 F101 0101       ADD              R1,#1       ;
   85 00000038 E7F4            B                CHECKLOOP   ;
   86 0000003A         
   87 0000003A         
   88 0000003A         EQUAL
   89 0000003A F04F 0001       MOV              R0,#1       ;
   90 0000003E E001            B                CHECKDONE
   91 00000040         NOTEQUAL
   92 00000040 F04F 0000       MOV              R0,#0       ;
   93 00000044         CHECKDONE
   94 00000044 E8BD 41FC       POP              {R2-R8,LR}
   95 00000048 4770            BX               LR
   96 0000004A         
   97 0000004A         ;-------------------------------------------------------
                       
   98 0000004A         ; End of file Exam2asm.s
   99 0000004A 00 00           ALIGN
  100 0000004C                 END
Command Line: --debug --xref --cpu=Cortex-M4 --apcs=interwork --depend=.\exam2a
sm.d -o.\exam2asm.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Kei
l\ARM\Inc\TI\TM4C123 --predefine="__EVAL SETA 1" --list=.\exam2asm.lst Exam2asm
.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

.text 00000000

Symbol: .text
   Definitions
      At line 11 in file Exam2asm.s
   Uses
      None
Comment: .text unused
CHECKDONE 00000044

Symbol: CHECKDONE
   Definitions
      At line 93 in file Exam2asm.s
   Uses
      At line 90 in file Exam2asm.s
Comment: CHECKDONE used once
CHECKLOOP 00000024

Symbol: CHECKLOOP
   Definitions
      At line 76 in file Exam2asm.s
   Uses
      At line 85 in file Exam2asm.s
Comment: CHECKLOOP used once
Check 00000020

Symbol: Check
   Definitions
      At line 73 in file Exam2asm.s
   Uses
      At line 9 in file Exam2asm.s
Comment: Check used once
EQUAL 0000003A

Symbol: EQUAL
   Definitions
      At line 88 in file Exam2asm.s
   Uses
      At line 82 in file Exam2asm.s
Comment: EQUAL used once
NOTEQUAL 00000040

Symbol: NOTEQUAL
   Definitions
      At line 91 in file Exam2asm.s
   Uses
      At line 80 in file Exam2asm.s
Comment: NOTEQUAL used once
STRDONE 0000001A

Symbol: STRDONE
   Definitions
      At line 44 in file Exam2asm.s
   Uses
      At line 39 in file Exam2asm.s
Comment: STRDONE used once
STRLOOP 0000000A

Symbol: STRLOOP



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 36 in file Exam2asm.s
   Uses
      At line 42 in file Exam2asm.s
Comment: STRLOOP used once
strLen 00000000

Symbol: strLen
   Definitions
      At line 32 in file Exam2asm.s
   Uses
      At line 8 in file Exam2asm.s
Comment: strLen used once
9 symbols
340 symbols in table
